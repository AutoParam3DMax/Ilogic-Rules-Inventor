Sub Main()

    Dim oDoc As Document
    oDoc = ThisDoc.Document

    ' Verifying whether a document is an IAM assembly
    If oDoc.DocumentType <> kAssemblyDocumentObject Then
        MessageBox.Show("Ta reguła działa tylko dla złożeń (.iam)!", "Błąd", MessageBoxButtons.OK, MessageBoxIcon.Error)
        Exit Sub
    End If

    ' Export path declared
    Dim ExportFolder As String = String.Empty

    Dim result As DialogResult
    result = MessageBox.Show("Do you want to save the PDF in the main assembly folder?" & vbCrLf & _
                             "Yes = assembling folder" & vbCrLf & "No = select your own folder", _
                             "Selecting the save path", MessageBoxButtons.YesNoCancel, MessageBoxIcon.Question)

    If result = DialogResult.Cancel Then
        Exit Sub
    ElseIf result = DialogResult.Yes Then
        ExportFolder = System.IO.Path.GetDirectoryName(oDoc.FullFileName)
    Else
        ' Folder selection by the user
        Dim fbd As New FolderBrowserDialog
        fbd.Description = "Select the folder to save PDF files"
        If fbd.ShowDialog() = DialogResult.OK Then
            ExportFolder = fbd.SelectedPath
        Else
            Exit Sub
        End If
    End If

    ' Creating a list for storing processed files
    Dim processedFiles As New List(Of String)

    ProcessDocumentRecursive(oDoc, processedFiles, ExportFolder)

    MessageBox.Show("PDF generation process completed!", "Completed")

End Sub


' Recursive function for document processing
' **********************************************************************************
Sub ProcessDocumentRecursive(oDoc As Document, processedFiles As List(Of String), ExportFolder As String)

    If processedFiles.Contains(oDoc.FullFileName) Then
        Return
    Else
        processedFiles.Add(oDoc.FullFileName)
    End If

    If oDoc.DocumentType = kPartDocumentObject Or oDoc.DocumentType = kAssemblyDocumentObject Then

        Dim sIDWFile As String
        sIDWFile = Left(oDoc.FullFileName, Len(oDoc.FullFileName) - 3) & "idw"

        If System.IO.File.Exists(sIDWFile) Then
            Try
                Dim oIDWDoc As DrawingDocument
                oIDWDoc = ThisApplication.Documents.Open(sIDWFile, False)

                ' Creating a PDF name in the selected folder
                Dim sPDFName As String = System.IO.Path.GetFileNameWithoutExtension(sIDWFile) & ".pdf"
                Dim sPDFFile As String = System.IO.Path.Combine(ExportFolder, sPDFName)

                ExportAllSheetsToPDF(oIDWDoc, sPDFFile)

                oIDWDoc.Close(True)

            Catch ex As Exception
                MessageBox.Show("Error during processing: " & oDoc.FullFileName & vbCrLf & ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error)
            End Try
        End If
    End If

    If oDoc.DocumentType = kAssemblyDocumentObject Then
        Dim oAssyDoc As AssemblyDocument
        oAssyDoc = oDoc

        For Each oOcc As ComponentOccurrence In oAssyDoc.ComponentDefinition.Occurrences
            Try
                If Not oOcc.Suppressed Then
                    If Not oOcc.ReferencedDocumentDescriptor Is Nothing Then
                        If oOcc.ReferencedDocumentDescriptor.ReferencedDocument IsNot Nothing Then

                            ProcessDocumentRecursive(oOcc.ReferencedDocumentDescriptor.ReferencedDocument, processedFiles, ExportFolder)
                        End If
                    End If
                End If
            Catch ex As Exception
                MessageBox.Show("Component omitted: " & oOcc.Name & vbCrLf & ex.Message, "Warning")
            End Try
        Next
    End If

End Sub


' Export IDW to PDF with all sheets
' **********************************************************************************
Sub ExportAllSheetsToPDF(oIDWDoc As DrawingDocument, sPDFFile As String)

    Dim PDFAddIn As TranslatorAddIn
    PDFAddIn = ThisApplication.ApplicationAddIns.ItemById("{0AC6FD96-2F4D-42CE-8BE0-8AEA580399E4}")

    If PDFAddIn Is Nothing Then
        MessageBox.Show("No PDF Translator found!", "Error")
        Exit Sub
    End If

    Dim oContext As TranslationContext
    oContext = ThisApplication.TransientObjects.CreateTranslationContext
    oContext.Type = IOMechanismEnum.kFileBrowseIOMechanism

    Dim oOptions As NameValueMap
    oOptions = ThisApplication.TransientObjects.CreateNameValueMap

    If PDFAddIn.HasSaveCopyAsOptions(oIDWDoc, oContext, oOptions) Then
        oOptions.Value("All_Color_AS_Black") = False
        oOptions.Value("Remove_Line_Weights") = False
        oOptions.Value("Vector_Resolution") = 400
        oOptions.Value("Sheet_Range") = PrintRangeEnum.kPrintAllSheets
    End If

    Dim oData As DataMedium
    oData = ThisApplication.TransientObjects.CreateDataMedium
    oData.FileName = sPDFFile

    PDFAddIn.SaveCopyAs(oIDWDoc, oContext, oOptions, oData)

End Sub
