Sub main
	
	Dim oZespol As AssemblyDocument
	oZespol = ThisApplication.ActiveDocument
	
	Dim oZespolDef As ComponentDefinition
	oZespolDef = oZespol.ComponentDefinition
	
	Dim ListaPrzekroczonych As New List(Of String)

	Dim oComp As ComponentOccurrence
	Dim oPartDoc As PartDocument
	Dim oCompDef As ComponentDefinition
	
	Dim DLength As Double
    Dim DWidth As Double
	

    DLength = InputBox("Enter the permissible LENGTH (mm):", "Dimension control settings", 1000)
    If DLength = 0 Then
        MessageBox.Show("Cancelled or invalid value entered. The rule will be stopped.", "Cancelled")
        Exit Sub
    End If
    
    DWidth = InputBox("Enter the acceptable WIDTH (mm):", "Dimension control settings", 2000)
    If DWidth = 0 Then
        MessageBox.Show("Cancelled or invalid value entered. The rule will be stopped.", "Cancelled")
        Exit Sub
    End If
	
	For Each oComp In oZespolDef.Occurrences.AllLeafOccurrences
		
		If oComp.Suppressed Then Continue For
			
		oPartDoc = oComp.Definition.Document
		oCompDef = oComp.Definition
		
		If TypeOf oPartDoc.ComponentDefinition Is SheetMetalComponentDefinition Then
			SprawdzWymiar(DLength, DWidth, oCompDef, oComp, ListaPrzekroczonych)
		End If

	Next

	If ListaPrzekroczonych.Count > 0 Then
		Dim komunikat As String
		komunikat = "Items exceeding the permissible dimensions: " & DLength & " x " & DWidth & vbCrLf & vbCrLf
		For Each wpis In ListaPrzekroczonych
			komunikat &= wpis & vbCrLf
		Next

		MessageBox.Show(komunikat, "Dimension exceedances detected")

 	 Try

            Dim FullPath As String = oZespol.FullFileName
            Dim FolderPath As String = System.IO.Path.GetDirectoryName(FullPath)
            Dim TxtFileName As String = System.IO.Path.GetFileNameWithoutExtension(FullPath) & "_Exceedances.txt"
            Dim TxtFilePath As String = System.IO.Path.Combine(FolderPath, TxtFileName)
            System.IO.File.WriteAllText(TxtFilePath, komunikat)
            
            MessageBox.Show("List of items saved to file: " & vbCrLf & TxtFilePath, "Saved")
            
        Catch ex As Exception
            MessageBox.Show("TXT file write error: " & ex.Message, "iLogic error")
        End Try

	Else
		MessageBox.Show("No components exceeding the permissible dimensions.", "Inspection result")
	End If

End Sub


Private Sub SprawdzWymiar(ByVal DLength As Double, ByVal DWidth As Double, oDef As SheetMetalComponentDefinition, oOcc As ComponentOccurrence, ByRef ListaPrzekroczonych As List(Of String))

    If oDef.FlatPattern Is Nothing Then
        oDef.Unfold()
    End If

    Dim oFlat As FlatPattern = oDef.FlatPattern
	
	Dim oDoc As Document
	oDoc = ThisApplication.ActiveDocument
	
	Dim oHighLightSet As HighlightSets
	oHighLightSet = oDoc.HighlightSets
	
	Dim oHighlight As HighlightSet
	oHighlight = oHighLightSet.Add
	
	oHighlight.Color = ThisApplication.TransientObjects.CreateColor(32, 178, 170)

    Dim szer As Double = Round(oFlat.Width * 10, 2) 
    Dim dl As Double = Round(oFlat.Length * 10, 2)
	

    Dim ElementMax As Double = Math.Max(szer, dl)
    Dim ElementMin As Double = Math.Min(szer, dl)
	
    Dim GranicaMax As Double = Math.Max(DLength, DWidth)
    Dim GranicaMin As Double = Math.Min(DLength, DWidth)


    If ElementMax > GranicaMax Or ElementMin > GranicaMin Then
		oHighlight.AddItem(oOcc)
		Dim nr As String = ""
        Try
            nr = oDef.Document.PropertySets.Item("Design Tracking Properties").Item("Part Number").Value
        Catch
            nr = oDef.Document.DisplayName
        End Try

        ListaPrzekroczonych.Add(nr & " â€“ " & szer & " x " & dl & " mm")
    End If
	
	
End Sub
